{"mappings":"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","sources":["<anon>","src/index.js","src/js/open_modal.js","src/js/modal_team.js","src/js/add_to_queue.js","src/js/add_to_watched.js","src/js/utility/footerGetCurrentYear.js"],"sourcesContent":["(function () {\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired76b\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired76b\"] = parcelRequire;\n}\nparcelRequire(\"ckCCL\");\nparcelRequire(\"jcFG7\");\n\nvar $iGUyU = parcelRequire(\"iGUyU\");\nfunction $8ea440fbf1edb4b2$export$a8e00544ba5ccf21() {\n    const teamMarkup = `\n  <div class=\"team-details\">\n    <h2 class=\"team-details__title\"> Mellow Yellow Team </h2>\n    <ul class=\"team-details__list list\">\n      <li class=\"team-details__item\">\n        <figure>\n      \n          <figcaption>\n            <h3 class=\"team-details__name\">Szymon Dymański</h3>\n            <p class=\"team-details_role\">Team Leader / Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n      <li class=\"team-details__item\">\n        <figure>\n    \n          <figcaption>\n            <h3 class=\"team-details__name\">Dorota Domańska</h3>\n            <p class=\"team-details_role\">Scrum Master / Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n      <li class=\"team-details__item\">\n        <figure>\n  \n          <figcaption>\n            <h3 class=\"team-details__name\">Małgorzata Marczyńska</h3>\n            <p class=\"team-details_role\">Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n      <li class=\"team-details__item\">\n        <figure>\n    \n          <figcaption>\n            <h3 class=\"team-details__name\">Marta Domżalska</h3>\n            <p class=\"team-details_role\">Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n      <li class=\"team-details__item\">\n        <figure>\n    \n          <figcaption>\n            <h3 class=\"team-details__name\">Mateusz Martin</h3>\n            <p class=\"team-details_role\">Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n      <li class=\"team-details__item\">\n        <figure>\n    \n          <figcaption>\n            <h3 class=\"team-details__name\">Krzysztof Flisikowski</h3>\n            <p class=\"team-details_role\">Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n    </ul>\n  </div>\n     `;\n    const modalContent = document.querySelector(\".modal-content\");\n    modalContent.insertAdjacentHTML(\"afterbegin\", teamMarkup);\n}\n\n\n\nvar $gJQog = parcelRequire(\"gJQog\");\n\nvar $eizMI = parcelRequire(\"eizMI\");\nconst $870bee002d937441$var$MOVIE_URL = `https://api.themoviedb.org/3/movie/`;\nconst $870bee002d937441$var$refs = {\n    body: document.querySelector(\"body\"),\n    backdropModal: document.querySelector(\".backdrop\"),\n    modal: document.querySelector(\".modal\")\n};\n$870bee002d937441$var$refs.body.addEventListener(\"click\", $870bee002d937441$var$openModal);\nconst $870bee002d937441$export$d26b433b93abe1a0 = async (movieId)=>{\n    const response = await fetch(`${$870bee002d937441$var$MOVIE_URL}${movieId}?api_key=${(0, $gJQog.API_KEY)}`);\n    const movie = await response.json();\n    return movie;\n};\nfunction $870bee002d937441$var$openModal(e) {\n    if (e.target.classList.contains(\"backdrop\")) $870bee002d937441$var$closeModal();\n    const id = e.target.getAttribute(\"data-movieId\");\n    if (e.target?.closest(\"svg\")?.classList.contains(\"modal-close\")) $870bee002d937441$var$closeModal();\n    else {\n        document.addEventListener(\"keydown\", $870bee002d937441$var$checkModalKey);\n        if (e.target?.closest(\"div\")?.classList.contains(\"movie-card\")) {\n            $870bee002d937441$var$refs.backdropModal.classList.remove(\"is-hidden\");\n            // document.addEventListener('keydown', checkModalKey);\n            (0, $eizMI.displayModalLoader)();\n            $870bee002d937441$export$d26b433b93abe1a0(id).then((elem)=>{\n                setTimeout(()=>{\n                    (0, $iGUyU.renderModalMovie)(elem);\n                }, 1000);\n            });\n        }\n        if (e.target?.closest(\"span\")?.classList.contains(\"team-link\")) {\n            $870bee002d937441$var$refs.backdropModal.classList.remove(\"is-hidden\");\n            // document.addEventListener('keydown', checkModalKey);\n            (0, $8ea440fbf1edb4b2$export$a8e00544ba5ccf21)();\n        }\n    }\n}\nfunction $870bee002d937441$var$closeModal() {\n    $870bee002d937441$var$refs.body.style.overflowY = \"scroll\";\n    $870bee002d937441$var$refs.backdropModal.classList.add(\"is-hidden\");\n    document.removeEventListener(\"keydown\", $870bee002d937441$var$checkModalKey);\n    $870bee002d937441$var$refs.modal.innerHTML = \"\";\n}\nfunction $870bee002d937441$var$checkModalKey(e) {\n    console.log(e.code);\n    if (e.code === \"Escape\") $870bee002d937441$var$closeModal();\n}\n\n\n\n\nvar $6JpON = parcelRequire(\"6JpON\");\nconst $a4ca6e042ef005e4$var$modal = document.querySelector(\".modal\");\nconst $a4ca6e042ef005e4$export$495501e7ab0a9653 = \"movies-watched\";\n$a4ca6e042ef005e4$var$modal.addEventListener(\"click\", (ev)=>{\n    const targetEl = ev.target;\n    if (targetEl.nodeName == \"BUTTON\" && targetEl.classList.contains(\"button--watched\")) {\n        // get movie data from DOM\n        const movieId = $a4ca6e042ef005e4$var$modal.querySelector(\"div[data-movieid]\").dataset.movieid;\n        const movieTitle = $a4ca6e042ef005e4$var$modal.querySelector(\".film-details__main-title\").innerHTML;\n        let watchedList = JSON.parse(localStorage.getItem($a4ca6e042ef005e4$export$495501e7ab0a9653));\n        if (watchedList == null) watchedList = [];\n        // making a list of ids that are already in localStorage\n        let watchedIds = [];\n        watchedList.forEach((watchedMovie)=>{\n            watchedIds.push(watchedMovie.id);\n        });\n        // checking if the film is already in localStorage or not\n        if (watchedIds.includes(movieId)) (0, $6JpON.Notify).warning(\"You already added the movie to watched\");\n        else {\n            // check if movie is in queue list ...\n            let queuedList = JSON.parse(localStorage.getItem((0, $29a929db5866e5fb$export$88934817e6e237da)));\n            if (queuedList) // ... if it even exists ...\n            {\n                if (queuedList.length > 0) {\n                    // ... and if it's not an empty array\n                    let queuedIds = [];\n                    queuedList.forEach((queuedMovie)=>{\n                        queuedIds.push(queuedMovie.id);\n                    });\n                    // Remove movie from queue list, if it's in there\n                    if (queuedIds.includes(movieId)) {\n                        queuedList.splice(queuedIds.indexOf(movieId), 1);\n                        localStorage.setItem((0, $29a929db5866e5fb$export$88934817e6e237da), JSON.stringify(queuedList));\n                    }\n                }\n            }\n            // finally add movie to watched list\n            const movieInfo = {\n                id: movieId,\n                title: movieTitle\n            };\n            watchedList.push(movieInfo);\n            localStorage.setItem($a4ca6e042ef005e4$export$495501e7ab0a9653, JSON.stringify(watchedList));\n        }\n    }\n});\n\n\n\nvar $6JpON = parcelRequire(\"6JpON\");\nconst $29a929db5866e5fb$var$modal = document.querySelector(\".modal\");\nconst $29a929db5866e5fb$export$88934817e6e237da = \"movies-queued\";\n$29a929db5866e5fb$var$modal.addEventListener(\"click\", (ev)=>{\n    const targetEl = ev.target;\n    if (targetEl.nodeName == \"BUTTON\" && targetEl.classList.contains(\"button--queue\")) {\n        // get movie data from DOM\n        const movieId = $29a929db5866e5fb$var$modal.querySelector(\"div[data-movieid]\").dataset.movieid;\n        const movieTitle = $29a929db5866e5fb$var$modal.querySelector(\".film-details__main-title\").innerHTML;\n        let queuedList = JSON.parse(localStorage.getItem($29a929db5866e5fb$export$88934817e6e237da));\n        if (queuedList == null) queuedList = [];\n        // making a list of ids that are already in localStorage\n        let queuedIds = [];\n        queuedList.forEach((queuedMovie)=>{\n            queuedIds.push(queuedMovie.id);\n        });\n        //checking if the film is already in localStorage or not\n        if (queuedIds.includes(movieId)) (0, $6JpON.Notify).warning(\"You already added the movie to queued\");\n        else {\n            // check if movie is in watched list ...\n            let watchedList = JSON.parse(localStorage.getItem((0, $a4ca6e042ef005e4$export$495501e7ab0a9653)));\n            if (watchedList) // ... if it even exists ...\n            {\n                if (watchedList.length > 0) {\n                    // ... and if it's not an empty array\n                    let watchedIds = [];\n                    watchedList.forEach((watchedMovie)=>{\n                        watchedIds.push(watchedMovie.id);\n                    });\n                    // Remove movie from watched list, if it's in there\n                    if (watchedIds.includes(movieId)) {\n                        watchedList.splice(watchedIds.indexOf(movieId), 1);\n                        localStorage.setItem((0, $a4ca6e042ef005e4$export$495501e7ab0a9653), JSON.stringify(watchedList));\n                    }\n                }\n            }\n            // finally add movie to queued list\n            const movieInfo = {\n                id: movieId,\n                title: movieTitle\n            };\n            queuedList.push(movieInfo);\n            localStorage.setItem($29a929db5866e5fb$export$88934817e6e237da, JSON.stringify(queuedList));\n        }\n    }\n});\n\n\n\nconst $fa99a0b2f4d3d56d$var$copyright = document.querySelector(\".footer__currentYear\");\nconst $fa99a0b2f4d3d56d$var$currentYear = new Date().getFullYear();\n$fa99a0b2f4d3d56d$var$copyright.textContent = $fa99a0b2f4d3d56d$var$currentYear;\n\n\n\n})();\n//# sourceMappingURL=index.2b9cd884.js.map\n","import './js/movie_search';\nimport './js/pagination';\nimport './js/open_modal';\nimport './js/add_to_queue';\nimport './js/add_to_watched';\nimport './js/utility/footerGetCurrentYear'\n","import { renderModalMovie } from './cards_rendering';\n\nimport { modalTeam } from './modal_team';\n\nimport { API_KEY, GENRE_URL, API_URL } from './main_fetch.js';\n\nimport { displayModalLoader } from './loader_spinner';\n\nconst MOVIE_URL = `https://api.themoviedb.org/3/movie/`;\nconst refs = {\n  body: document.querySelector('body'),\n  backdropModal: document.querySelector('.backdrop'),\n  modal: document.querySelector('.modal'),\n};\n\nrefs.body.addEventListener('click', openModal);\nexport const oneMovieFetch = async movieId => {\n  const response = await fetch(`${MOVIE_URL}${movieId}?api_key=${API_KEY}`);\n  const movie = await response.json();\n  return movie;\n};\nfunction openModal(e) {\n  if (e.target.classList.contains('backdrop')) {\n    closeModal();\n  }\n  const id = e.target.getAttribute('data-movieId');\n  if (e.target?.closest('svg')?.classList.contains('modal-close')) {\n    closeModal();\n  } else {\n    document.addEventListener('keydown', checkModalKey);\n\n    if (e.target?.closest('div')?.classList.contains('movie-card')) {\n      refs.backdropModal.classList.remove('is-hidden');\n      // document.addEventListener('keydown', checkModalKey);\n      displayModalLoader();\n      oneMovieFetch(id).then(elem => {\n        setTimeout(() => {\n          renderModalMovie(elem);\n        }, 1000);\n      });\n    }\n    if (e.target?.closest('span')?.classList.contains('team-link')) {\n      refs.backdropModal.classList.remove('is-hidden');\n      // document.addEventListener('keydown', checkModalKey);\n      modalTeam();\n    }\n  }\n}\n\nfunction closeModal() {\n  refs.body.style.overflowY = 'scroll';\n  refs.backdropModal.classList.add('is-hidden');\n  document.removeEventListener('keydown', checkModalKey);\n\n  refs.modal.innerHTML = '';\n}\n\nfunction checkModalKey(e) {\n  console.log(e.code);\n  if (e.code === 'Escape') {\n    closeModal();\n  }\n}\n","\n\nexport function modalTeam() {\n  const teamMarkup = `\n  <div class=\"team-details\">\n    <h2 class=\"team-details__title\"> Mellow Yellow Team </h2>\n    <ul class=\"team-details__list list\">\n      <li class=\"team-details__item\">\n        <figure>\n      \n          <figcaption>\n            <h3 class=\"team-details__name\">Szymon Dymański</h3>\n            <p class=\"team-details_role\">Team Leader / Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n      <li class=\"team-details__item\">\n        <figure>\n    \n          <figcaption>\n            <h3 class=\"team-details__name\">Dorota Domańska</h3>\n            <p class=\"team-details_role\">Scrum Master / Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n      <li class=\"team-details__item\">\n        <figure>\n  \n          <figcaption>\n            <h3 class=\"team-details__name\">Małgorzata Marczyńska</h3>\n            <p class=\"team-details_role\">Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n      <li class=\"team-details__item\">\n        <figure>\n    \n          <figcaption>\n            <h3 class=\"team-details__name\">Marta Domżalska</h3>\n            <p class=\"team-details_role\">Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n      <li class=\"team-details__item\">\n        <figure>\n    \n          <figcaption>\n            <h3 class=\"team-details__name\">Mateusz Martin</h3>\n            <p class=\"team-details_role\">Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n      <li class=\"team-details__item\">\n        <figure>\n    \n          <figcaption>\n            <h3 class=\"team-details__name\">Krzysztof Flisikowski</h3>\n            <p class=\"team-details_role\">Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n    </ul>\n  </div>\n     `;\n  const modalContent = document.querySelector('.modal-content');\n  modalContent.insertAdjacentHTML('afterbegin', teamMarkup);\n}\n","import { storageKeyWatched } from './add_to_watched';\nimport { Notify } from 'notiflix';\n\nconst modal = document.querySelector('.modal');\nexport const storageKeyQueue = 'movies-queued';\n\nmodal.addEventListener('click', ev => {\n  const targetEl = ev.target;\n  if (\n    targetEl.nodeName == 'BUTTON' &&\n    targetEl.classList.contains('button--queue')\n  ) {\n    // get movie data from DOM\n    const movieId = modal.querySelector('div[data-movieid]').dataset.movieid;\n    const movieTitle = modal.querySelector(\n      '.film-details__main-title'\n    ).innerHTML;\n\n    let queuedList = JSON.parse(localStorage.getItem(storageKeyQueue));\n    if (queuedList == null) {\n      queuedList = [];\n    }\n\n    // making a list of ids that are already in localStorage\n    let queuedIds = [];\n    queuedList.forEach(queuedMovie => {\n      queuedIds.push(queuedMovie.id);\n    });\n\n    //checking if the film is already in localStorage or not\n    if (queuedIds.includes(movieId)) {\n      Notify.warning('You already added the movie to queued');\n    } else {\n      // check if movie is in watched list ...\n      let watchedList = JSON.parse(localStorage.getItem(storageKeyWatched));\n      if (watchedList) {\n        // ... if it even exists ...\n        if (watchedList.length > 0) {\n          // ... and if it's not an empty array\n          let watchedIds = [];\n          watchedList.forEach(watchedMovie => {\n            watchedIds.push(watchedMovie.id);\n          });\n          // Remove movie from watched list, if it's in there\n          if (watchedIds.includes(movieId)) {\n            watchedList.splice(watchedIds.indexOf(movieId), 1);\n            localStorage.setItem(\n              storageKeyWatched,\n              JSON.stringify(watchedList)\n            );\n          }\n        }\n      }\n\n      // finally add movie to queued list\n      const movieInfo = {\n        id: movieId,\n        title: movieTitle,\n      };\n      queuedList.push(movieInfo);\n      localStorage.setItem(storageKeyQueue, JSON.stringify(queuedList));\n    }\n  }\n});","import { storageKeyQueue } from './add_to_queue';\nimport { Notify } from 'notiflix';\n\nconst modal = document.querySelector('.modal');\nexport const storageKeyWatched = 'movies-watched';\n\nmodal.addEventListener('click', ev => {\n  const targetEl = ev.target;\n  if (\n    targetEl.nodeName == 'BUTTON' &&\n    targetEl.classList.contains('button--watched')\n  ) {\n    // get movie data from DOM\n    const movieId = modal.querySelector('div[data-movieid]').dataset.movieid;\n    const movieTitle = modal.querySelector(\n      '.film-details__main-title'\n    ).innerHTML;\n\n    let watchedList = JSON.parse(localStorage.getItem(storageKeyWatched));\n    if (watchedList == null) {\n      watchedList = [];\n    }\n\n    // making a list of ids that are already in localStorage\n    let watchedIds = [];\n    watchedList.forEach(watchedMovie => {\n      watchedIds.push(watchedMovie.id);\n    });\n\n    // checking if the film is already in localStorage or not\n    if (watchedIds.includes(movieId)) {\n      Notify.warning('You already added the movie to watched');\n    } else {\n      // check if movie is in queue list ...\n      let queuedList = JSON.parse(localStorage.getItem(storageKeyQueue));\n      if (queuedList) {\n        // ... if it even exists ...\n        if (queuedList.length > 0) {\n          // ... and if it's not an empty array\n          let queuedIds = [];\n          queuedList.forEach(queuedMovie => {\n            queuedIds.push(queuedMovie.id);\n          });\n          // Remove movie from queue list, if it's in there\n          if (queuedIds.includes(movieId)) {\n            queuedList.splice(queuedIds.indexOf(movieId), 1);\n            localStorage.setItem(storageKeyQueue, JSON.stringify(queuedList));\n          }\n        }\n      }\n\n      // finally add movie to watched list\n      const movieInfo = {\n        id: movieId,\n        title: movieTitle,\n      };\n      watchedList.push(movieInfo);\n      localStorage.setItem(storageKeyWatched, JSON.stringify(watchedList));\n    }\n  }\n});","const copyright = document.querySelector('.footer__currentYear');\nconst currentYear = new Date().getFullYear();\n\ncopyright.textContent = currentYear;\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$iGUyU","$gJQog","$eizMI","$870bee002d937441$var$refs","body","document","querySelector","backdropModal","modal","addEventListener","e","target","classList","contains","$870bee002d937441$var$closeModal","getAttribute","closest","$870bee002d937441$var$checkModalKey","remove","displayModalLoader","$870bee002d937441$export$d26b433b93abe1a0","then","elem","setTimeout","renderModalMovie","teamMarkup","modalContent","insertAdjacentHTML","movieId","response","fetch","API_KEY","movie","json","style","overflowY","add","removeEventListener","innerHTML","console","log","$6JpON","$a4ca6e042ef005e4$var$modal","$a4ca6e042ef005e4$export$495501e7ab0a9653","ev","targetEl","nodeName","dataset","movieid","movieTitle","watchedList","JSON","parse","localStorage","getItem","watchedIds","forEach","watchedMovie","push","includes","Notify","warning","queuedList","$29a929db5866e5fb$export$88934817e6e237da","length","queuedIds","queuedMovie","splice","indexOf","setItem","stringify","title","$29a929db5866e5fb$var$modal","$fa99a0b2f4d3d56d$var$copyright","$fa99a0b2f4d3d56d$var$currentYear","Date","getFullYear","textContent"],"version":3,"file":"index.2b9cd884.js.map"}